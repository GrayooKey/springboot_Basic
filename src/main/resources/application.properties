# 使用这个配置文件可以直接使用 Spring Boot 预定义的一些配置参数，关于其他配置参数的详细说明和描述可以查看官方的文档说明：
# https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html

#该文件是 Spring Boot 的配置文件，这个文件会被发布在classpath中，并且被 Spring Boot 自动解读。
#该文件内容也可以以 .yml文件格式存在，.yml文件提供了结构化及其嵌套的格式。
# .properties 文件中配置写法：
server.port=8080
server.tomcat.uri-encoding=utf-8
#同样的配置在 .yml文件中可以如下的形式存在：
# server:
#    port:8080
#    tomcat:
#        uri-encoding:utf-8




#数据库驱动（JDBC驱动程序）、数据库URL、用户名、密码
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/springbootdb?characterEncoding=utf8&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=123456
#数据库连接池最大连接数
spring.datasource.max-active=20
#数据库连接中维护的最大（小）空闲连接数
spring.datasource.max-idle=8
spring.datasource.min-idle=8
#数据库连接池的初始连接数
spring.datasource.tomcat.initial-size=10




#要操作的目标数据库，默认情况下自动检测。也可以使用“databasePlatform”属性进行设置。
spring.jpa.database=mysql
#是否启用SQL语句的日志记录。
spring.jpa.show-sql=true
#DDL模式。这实际上是“hibernate.hbm2ddl.auto”属性的快捷方式。使用嵌入式数据库时未默认为“create-drop”且未检测到架构管理器。否则，默认为“none”。spring.jpa.hibernate.ddl-auto=create|create-drop|validate|update|none
#此处将 ddl-auto 设置为update， 就是使用Hibernate来自动更新表结构，即如果数据库表不存在则创建，或者如果修改了表结构，在程序启动时则执行表结构的同步更新
spring.jpa.hibernate.ddl-auto=update
#命名策略的完全限定名称
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
#要在JPA提供程序上设置的其他本机属性
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#注册OpenEntityManagerInViewInterceptor。将JPA EntityManager绑定到线程以进行整个请求处理。
spring.jpa.open-in-view = true




#Spring MVC    视图前缀、后缀
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
#调度程序servlet的路径。
#spring.mvc.servlet.path=/
#用于静态资源的路径模式。
#spring.mvc.static-path-pattern=/**
#如果没有找到Handler来处理请求，是否应该抛出“NoHandlerFoundException”
##spring.mvc.throw-exception-if-no-handler-found=true
